- работа с курсами( у каждого курса есть уже вложенные адаптивные тесты - список вопросов и список ответов )
    =создание курса, добавления, редактирования и удаления курсов
    =проверка данных на валидацию
                = если данные верно то добавить курс к студенту
                = если нет то выдать ошибку смотря какая ошибка и попросить ввести заново
    =добавление в курс учебных материалов
    =присвоение каждому студенту одного или несколько курсов
  - у каждого курса будет свой преподаватель
- работа с студентами
    =создание студента
    =проверка данных на валидацию
            = если данные верно то добавить студента в список студентов
            = если нет то выдать ошибку смотря какая ошибка и попросить ввести заново


- адаптивные тесты
- аналитика по результатам тестов и успеваемости студентов





--------------------------------------------------------
backEnd
       - Entity
        + Student
        + Course
        + Test
        + Question
        + TestResult
        + Admin    ?
        + Analitic ?

       - Repository
       + RepositoryInterface (add, delete, update(set), find by..., findAll(?))  //<T> - ? / для каждой ентити
        + StudentsRepository для хранения студентов
        + CourseRepository   для хранения курсов
        + TestRepository для хранения тестов
        + QuestionRepository
        + TestResultRepository

      - dto
        + Student
        + Kurs
        + Test
        + учебный материал

      - servise
        +  для работы с Student (create, validation, add, remove, find by...)
        +  для работы с Kurs  (create, validation, add, remove, find by...)
        + и для тестов наверняка
        + принт любого списка

frontEnd
      - UserMenu for Student
      - UserMenu for Admin


